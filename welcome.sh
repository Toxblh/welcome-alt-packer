#!/bin/bash

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
show_progress() {
    local message="$1"
    echo -e "\n\033[1;34m[INFO]\033[0m $message"
}

show_success() {
    local message="$1"
    echo -e "\033[1;32m[‚úì]\033[0m $message"
}

show_error() {
    local message="$1"
    echo -e "\033[1;31m[‚úó]\033[0m $message"
}

show_warning() {
    local message="$1"
    echo -e "\033[1;33m[!]\033[0m $message"
}

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á—Ç–æ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ
is_sudo_configured() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≥—Ä—É–ø–ø—ã wheel –≤ sudoers
    sudo -n true 2>/dev/null || grep -q "^%wheel" /etc/sudoers 2>/dev/null
}

is_packages_installed() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
    rpm -q etersoft-build-utils hasher gear >/dev/null 2>&1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
execute_single_command() {
    local command="$1"
    local description="$2"
    local optional="$3"  # –µ—Å–ª–∏ "optional", —Ç–æ –æ—à–∏–±–∫–∞ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–∞
    
    echo ""
    show_progress "$description"
    showcmd "su" "-c" "$command"
    echo -e "\033[0;35m–í–≤–æ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å root:\033[0m"
    
    if su - -c "$command" 2>&1; then
        show_success "$description - –≤—ã–ø–æ–ª–Ω–µ–Ω–æ"
        return 0
    else
        local exit_code=$?
        if [ "$optional" = "optional" ]; then
            show_warning "$description - –ø—Ä–æ–ø—É—â–µ–Ω–æ (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ)"
            return 0
        else
            show_error "$description - –æ—à–∏–±–∫–∞ (–∫–æ–¥: $exit_code)"
            return $exit_code
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
check_package_installed() {
    rpm -q "$1" >/dev/null 2>&1
}

check_service_running() {
    systemctl is-active "$1" >/dev/null 2>&1
}

check_user_in_hasher() {
    groups "$1" 2>/dev/null | grep -q hasher
}

is_hasher_configured() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –≥—Ä—É–ø–ø–µ hasher –∏ —Å–ª—É–∂–±–∞ –∑–∞–ø—É—â–µ–Ω–∞
    check_user_in_hasher "$SAVE_USER" && check_service_running "hasher-privd.service"
}

is_rpmmacros_configured() {
    [ -f ~/.rpmmacros ] && grep -q "packager" ~/.rpmmacros
}

is_git_configured() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ —á—Ç–æ –≤ –Ω–µ–º –µ—Å—Ç—å altlinux.org
    if [ -f ~/.config/git/config-alt-team ] && grep -q "altlinux.org" ~/.gitconfig 2>/dev/null; then
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ GPG –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç <CHANGE_ME...>)
        if ! grep -q "<CHANGE_ME" ~/.config/git/config-alt-team 2>/dev/null; then
            return 0
        fi
    fi
    return 1
}

is_ssh_configured() {
    [ -f ~/.ssh/config ] && grep -q "gitery.altlinux.org" ~/.ssh/config
}

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å GPG
get_gpg_keys() {
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ GPG –∫–ª—é—á–µ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ: "ID Email Name"
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–ª—é—á–∏, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á (–º–æ–∂–Ω–æ –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å)
    gpg --list-secret-keys --with-colons 2>/dev/null | awk -F: '
    /^sec/ && $10 != "" { 
        keyid = $5
        userinfo = $10
        # –ò–∑–≤–ª–µ–∫–∞–µ–º email –∏–∑ userinfo
        if (match(userinfo, /<([^>]+)>/, email)) {
            print keyid " " email[1] " " userinfo
        }
    }'
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –≤ —Å—Ç–∏–ª–µ etersoft-build-utils
showcmd()
{
    local i
    echo -e "\033[1;32m \$"
    for i in "$@" ; do
        echo -n " "
        # –¥–æ–±–∞–≤–ª—è–µ–º –∫–∞–≤—ã—á–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–µ–ª—ã
        echo -n "$i" | sed -e "s|\(.* .*\)|'\1'|g"
    done
    echo -e "\033[0m"
}

# –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã —Å –∑–∞–ø—Ä–æ—Å–æ–º –ø–∞—Ä–æ–ª—è
execute_with_retry() {
    local command="$1"
    local description="$2"
    local max_attempts=3
    local attempt_counter=0
    
    # –ü–µ—Ä–µ—á–∏—Å–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –æ—à–∏–±–æ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö
    local auth_errors=("Authentication failure" "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è"
                       "authentification √©chou√©e" "Fehler bei der Authentifizierung"
                       "autenticaci√≥n fallida" "su: Authentication failure"
                       "su: –Ω–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å")

    show_progress "–í—ã–ø–æ–ª–Ω—è–µ–º: $description"
    echo ""
    echo -e "\033[1;37müìã –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:\033[0m"
    showcmd "su" "-c" "$command"
    echo ""
    echo -e "\033[0;36müîê –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä–æ–ª—å root\033[0m"
    
    while [ $attempt_counter -lt $max_attempts ]; do
        ((attempt_counter++))
        
        if [ $attempt_counter -gt 1 ]; then
            echo ""
            show_warning "–ü–æ–ø—ã—Ç–∫–∞ $attempt_counter –∏–∑ $max_attempts"
            echo -e "\033[0;33m–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å root –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Ç–º–µ–Ω—ã\033[0m"
        fi
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ stderr (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—à–∏–±–æ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)
        local temp_error_file
        temp_error_file=$(mktemp)
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É —Å real-time –≤—ã–≤–æ–¥–æ–º
        echo -e "\033[0;35m–í–≤–æ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å (—Å–∏–º–≤–æ–ª—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è):\033[0m"
        echo -e "\033[0;37m--- –í—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã (real-time) ---\033[0m"
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É —Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º stderr –≤ —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—à–∏–±–æ–∫
        su - -c "$command" 2> >(tee "$temp_error_file" >&2)
        retval=$?
        
        echo -e "\033[0;37m--- –ö–æ–Ω–µ—Ü –≤—ã–≤–æ–¥–∞ ---\033[0m"
        
        # –ß–∏—Ç–∞–µ–º stderr –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—à–∏–±–æ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        local error_output=""
        if [ -f "$temp_error_file" ]; then
            error_output=$(cat "$temp_error_file")
        fi
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
        if [ $retval -eq 0 ]; then
            echo -e "\033[0;32m‚úì –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ\033[0m"
            rm -f "$temp_error_file"
            return 0
        else
            echo -e "\033[0;31m‚úó –ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π (–∫–æ–¥: $retval)\033[0m"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ –ø—Ä–æ–±–ª–µ–º–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
            local is_auth_error=false
            for error_msg in "${auth_errors[@]}"; do
                if [[ $error_output == *"$error_msg"* ]]; then
                    is_auth_error=true
                    break
                fi
            done
            
            if [ "$is_auth_error" = true ]; then
                show_error "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!"
                
                if [ $attempt_counter -lt $max_attempts ]; then
                    echo -e "\033[0;33m–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: $((max_attempts - attempt_counter))\033[0m"
                else
                    echo ""
                    show_error "–î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è"
                    echo -e "\033[0;31m–í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:\033[0m"
                    echo "  1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∑–Ω–∞–µ—Ç–µ –ø–∞—Ä–æ–ª—å root"
                    echo "  2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –ø–æ–∑–∂–µ"
                    echo "  3. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"
                    
                    read -p "–•–æ—Ç–∏—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑? (–¥–∞/–Ω–µ—Ç): " retry_response
                    if [[ "$retry_response" =~ ^([–¥–î]|[yY]|[–¥–î][–∞–ê]|[yY][eE][sS])$ ]]; then
                        attempt_counter=0
                        max_attempts=3
                        rm -f "$temp_error_file"
                        continue
                    else
                        rm -f "$temp_error_file"
                        return 1
                    fi
                fi
            else
                # –û—à–∏–±–∫–∞ –Ω–µ —Å–≤—è–∑–∞–Ω–∞ —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
                show_error "–ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"
                
                echo ""
                read -p "–•–æ—Ç–∏—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –µ—â–µ —Ä–∞–∑? (–¥–∞/–Ω–µ—Ç): " retry_response
                if [[ "$retry_response" =~ ^([–¥–î]|[yY]|[–¥–î][–∞–ê]|[yY][eE][sS])$ ]]; then
                    attempt_counter=0
                    rm -f "$temp_error_file"
                    continue
                else
                    rm -f "$temp_error_file"
                    return $retval
                fi
            fi
        fi
        
        rm -f "$temp_error_file"
    done
    
    return 1
}

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —é–∑–µ—Ä–Ω–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è hasher
SAVE_USER=$USER

echo -e " __      __   _                      \033[1;33m_   _ _\033[0m     ___         _           "
echo -e " \ \    / /__| |__ ___ _ __  ___    \033[1;33m/_\ | | |_\033[0m  | _ \__ _ __| |_____ _ _ "
echo -e "  \ \/\/ / -_) / _/ _ \ '  \/ -_)  \033[1;33m/ _ \| |  _|\033[0m |  _/ _\` / _| / / -_) '_|"
echo -e "   \_/\_/\___|_\__\___/_|_|_\___| \033[1;33m/_/ \_\_|\__|\033[0m |_| \__,_\__|_\_\___|_|"
echo ""
echo -e "\033[1;37m–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å—Ä–µ–¥—ã –¥–ª—è —Å–±–æ—Ä–∫–∏ –ø–∞–∫–µ—Ç–æ–≤ –ê–ª—å—Ç Linux\033[0m"
echo ""

# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –æ–ø—Ä–æ—Å–Ω–∏–∫
echo -e "\033[1;36m=== –ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò ===\033[0m"
echo "–î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –ø–∞–∫–µ—Ç–∞–º–∏ –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ."
echo ""

while true; do
    read -p $'–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –ª–∞—Ç–∏–Ω–∏—Ü–µ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä - \033[1;32mAnton Palgunov\033[0m: ' FULLNAME
    if [[ -n "$FULLNAME" && "$FULLNAME" =~ ^[a-zA-Z\ ]+$ ]]; then
        show_success "–ò–º—è –ø—Ä–∏–Ω—è—Ç–æ: $FULLNAME"
        break
    else
        show_error "–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã –∏ –ø—Ä–æ–±–µ–ª—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
    fi
done

while true; do
    read -p $'–í–≤–µ–¥–∏—Ç–µ –≤–∞—à username (—á–∞—Å—Ç—å email@altlinux.org), –Ω–∞–ø—Ä–∏–º–µ—Ä - \033[1;32mtoxblh\033[0m: ' USERNAME
    if [[ -n "$USERNAME" && "$USERNAME" =~ ^[a-zA-Z0-9_-]+$ ]]; then
        show_success "Username –ø—Ä–∏–Ω—è—Ç: ${USERNAME}@altlinux.org"
        break
    else
        show_error "Username –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, _ –∏ -. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
    fi
done

# –í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ sudo
echo ""
echo -e "\033[1;36m=== –ù–ê–°–¢–†–û–ô–ö–ê SUDO ===\033[0m"

if is_sudo_configured; then
    show_success "Sudo —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ"
    echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≥—Ä—É–ø–ø—ã wheel –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å sudo."
else
    echo "Sudo –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—ã –æ—Ç –∏–º–µ–Ω–∏ root –±–µ–∑ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è."
    echo -e "\033[0;37m–ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: \033[1;33mcontrol sudowheel enabled\033[0m"
    echo ""
    read -p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å sudo –≤ —Å–∏—Å—Ç–µ–º—É? (–¥–∞/–Ω–µ—Ç): " RESPONSE

    if [[ "$RESPONSE" =~ ^([–¥–î]|[yY]|[–¥–î][–∞–ê]|[yY][eE][sS])$ ]]
    then
        echo ""
        if ! execute_single_command 'control sudowheel enabled' '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ sudo –¥–ª—è –≥—Ä—É–ø–ø—ã wheel'; then
            show_error "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å sudo. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ sudo."
            echo "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å sudo –ø–æ–∑–∂–µ –≤—Ä—É—á–Ω—É—é –∫–æ–º–∞–Ω–¥–æ–π:"
            echo -e "  \033[0;33msu -c 'control sudowheel enabled'\033[0m"
        else
            show_success "Sudo —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
            echo "–¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≥—Ä—É–ø–ø—ã wheel –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å sudo."
        fi
    else
        show_warning "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ sudo –ø—Ä–æ–ø—É—â–µ–Ω–∞."
        echo "–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä–æ–ª—å root."
    fi
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
echo ""
echo -e "\033[1;36m=== –£–°–¢–ê–ù–û–í–ö–ê –ü–ê–ö–ï–¢–û–í ===\033[0m"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
echo ""
echo -e "\033[1;36m=== –£–°–¢–ê–ù–û–í–ö–ê –ü–ê–ö–ï–¢–û–í ===\033[0m"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—Ç–¥–µ–ª—å–Ω–æ
echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
PACKAGES_TO_INSTALL=""
for pkg in etersoft-build-utils hasher faketime gear gear-sh-functions; do
    if check_package_installed "$pkg"; then
        echo "  ‚úì $pkg - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "  ‚úó $pkg - —Ç—Ä–µ–±—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞"
        PACKAGES_TO_INSTALL="$PACKAGES_TO_INSTALL $pkg"
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª—É–∂–±—ã hasher-privd
if check_service_running "hasher-privd.service"; then
    echo "  ‚úì hasher-privd.service - –∑–∞–ø—É—â–µ–Ω–∞"
    SERVICE_NEEDS_START=false
else
    echo "  ‚úó hasher-privd.service - —Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–ø—É—Å–∫"
    SERVICE_NEEDS_START=true
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø–µ hasher
if check_user_in_hasher "$SAVE_USER"; then
    echo "  ‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $SAVE_USER –≤ –≥—Ä—É–ø–ø–µ hasher"
    USER_NEEDS_ADD=false
else
    echo "  ‚úó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $SAVE_USER –Ω–µ –≤ –≥—Ä—É–ø–ø–µ hasher"
    USER_NEEDS_ADD=true
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ hasher-priv
if [ -f "/etc/hasher-priv/system" ] && grep -q "allowed_mountpoints=/proc" "/etc/hasher-priv/system"; then
    echo "  ‚úì –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è hasher-priv –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
    HASHER_CONFIG_NEEDED=false
else
    echo "  ‚úó –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è hasher-priv —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
    HASHER_CONFIG_NEEDED=true
fi

echo ""

# –ï—Å–ª–∏ –≤—Å—ë —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ
if [ -z "$PACKAGES_TO_INSTALL" ] && [ "$SERVICE_NEEDS_START" = false ] && [ "$USER_NEEDS_ADD" = false ] && [ "$HASHER_CONFIG_NEEDED" = false ]; then
    show_success "–í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    echo "  ‚úì –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    echo "  ‚úì –°–ª—É–∂–±–∞ hasher-privd –∑–∞–ø—É—â–µ–Ω–∞"
    echo "  ‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É hasher"
    echo "  ‚úì –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è hasher-priv –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
else
    echo "–í—ã–ø–æ–ª–Ω—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É..."
    echo ""
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç—ã
    if [ -n "$PACKAGES_TO_INSTALL" ]; then
        PACKAGES_TO_INSTALL=$(echo $PACKAGES_TO_INSTALL | sed 's/^ *//')  # —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª –≤ –Ω–∞—á–∞–ª–µ
        if ! execute_single_command "epm install -y$PACKAGES_TO_INSTALL" "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤:$PACKAGES_TO_INSTALL"; then
            echo ""
            show_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç—ã!"
            echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é:"
            echo -e "  \033[0;33msu -c 'epm install -y$PACKAGES_TO_INSTALL'\033[0m"
            
            read -p "–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É? (–¥–∞/–Ω–µ—Ç): " continue_response
            if [[ ! "$continue_response" =~ ^([–¥–î]|[yY]|[–¥–î][–∞–ê]|[yY][eE][sS])$ ]]; then
                echo "–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã."
                exit 1
            fi
        fi
    fi
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é hasher-priv
    if [ "$HASHER_CONFIG_NEEDED" = true ]; then
        execute_single_command "echo 'allowed_mountpoints=/proc' > /etc/hasher-priv/system" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ hasher-priv" "optional"
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–±—É hasher-privd
    if [ "$SERVICE_NEEDS_START" = true ]; then
        execute_single_command "systemctl enable --now hasher-privd.service" "–ó–∞–ø—É—Å–∫ —Å–ª—É–∂–±—ã hasher-privd" "optional"
    fi
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É hasher
    if [ "$USER_NEEDS_ADD" = true ]; then
        execute_single_command "hasher-useradd $SAVE_USER" "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $SAVE_USER –≤ –≥—Ä—É–ø–ø—É hasher" "optional"
    fi
    
    echo ""
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    if check_package_installed "etersoft-build-utils" && check_service_running "hasher-privd.service" && check_user_in_hasher "$SAVE_USER"; then
        show_success "–í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!"
    else
        show_warning "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –Ω–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –º–æ–≥—É—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏—è"
        echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞—Ö–æ–¥–∞ –≤ —Å–µ—Å—Å–∏—é"
    fi
fi 

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ RPM —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º fingerprint
echo ""
echo -e "\033[1;36m=== –ù–ê–°–¢–†–û–ô–ö–ê RPM ===\033[0m"

if is_rpmmacros_configured; then
    show_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è RPM —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
    echo -e "\033[0;37m--- –¢–µ–∫—É—â–∏–π ~/.rpmmacros ---\033[0m"
    cat ~/.rpmmacros
    echo -e "\033[0;37m--- –ö–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞ ---\033[0m"
else
    show_progress "–°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é RPM –≤ ~/.rpmmacros"

    # –ü–æ–ª—É—á–∞–µ–º GPG fingerprint
    gpg_fingerprint=""
    if [ -f "$BACKUP_DIR/gpg_fingerprint.txt" ]; then
        gpg_fingerprint=$(cat "$BACKUP_DIR/gpg_fingerprint.txt")
    else
        # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∫–ª—é—á –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        existing_key=$(gpg --list-secret-keys --with-colons 2>/dev/null | grep -A5 "${USERNAME}@altlinux.org" | grep "^sec" | cut -d: -f5 | head -1)
        if [ -n "$existing_key" ]; then
            gpg_fingerprint=$(LANG=C gpg --fingerprint "$existing_key" | grep 'fingerprint =' | tr -d ' ' | cut -d= -f2)
        else
            gpg_fingerprint="<CHANGE_ME FROM \"gpg -k\">"
        fi
    fi

    cat << EOF > ~/.rpmmacros
%_topdir        %homedir/RPM
%_tmppath       %homedir/tmp
%_gpg_path      %homedir/.gnupg
%_gpg_name      $gpg_fingerprint
%packager       ${FULLNAME} <${USERNAME}@altlinux.org>
EOF

    show_success "–§–∞–π–ª ~/.rpmmacros —Å–æ–∑–¥–∞–Ω"
    echo -e "\033[0;37m--- –°–æ–¥–µ—Ä–∂–∏–º–æ–µ ~/.rpmmacros ---\033[0m"
    cat ~/.rpmmacros
    echo -e "\033[0;37m--- –ö–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞ ---\033[0m"
    
    if [[ "$gpg_fingerprint" == *"<CHANGE_ME"* ]]; then
        echo ""
        show_warning "GPG fingerprint –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        echo "–ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è GPG –∫–ª—é—á–∞ –æ–±–Ω–æ–≤–∏—Ç–µ %_gpg_name –≤ ~/.rpmmacros"
    fi
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ hasher
echo ""
if [ -f ~/.hasher/config ] && grep -q "packager" ~/.hasher/config; then
    show_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Hasher —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
    echo -e "\033[0;37m--- –¢–µ–∫—É—â–∏–π ~/.hasher/config ---\033[0m"
    cat ~/.hasher/config
    echo -e "\033[0;37m--- –ö–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞ ---\033[0m"
else
    show_progress "–°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Hasher –≤ ~/.hasher/config"
    mkdir -p ~/.hasher

    cat << EOF > ~/.hasher/config
packager="${FULLNAME} <${USERNAME}@altlinux.org>"
known_mountpoints=/proc
EOF

    show_success "–§–∞–π–ª ~/.hasher/config —Å–æ–∑–¥–∞–Ω"
    echo -e "\033[0;37m--- –°–æ–¥–µ—Ä–∂–∏–º–æ–µ ~/.hasher/config ---\033[0m"
    cat ~/.hasher/config
    echo -e "\033[0;37m--- –ö–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞ ---\033[0m"
fi

############
# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π
############
echo ""
echo -e "\033[1;36m=== –ì–ï–ù–ï–†–ê–¶–ò–Ø –ö–õ–Æ–ß–ï–ô ===\033[0m"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
TEAM_DIR="$HOME/alt-team"
JOIN_DIR="$TEAM_DIR/join"
BACKUP_DIR="$TEAM_DIR/backup"
mkdir -p "$JOIN_DIR" "$BACKUP_DIR"

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSH –∫–ª—é—á–∞
echo ""
echo -e "\033[1;35m--- SSH –∫–ª—é—á ---\033[0m"
SSH_KEY_PATH="$HOME/.ssh/alt_team_ed25519"

if [ -f "$SSH_KEY_PATH" ]; then
    show_success "SSH –∫–ª—é—á —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $SSH_KEY_PATH"
    echo "–ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á:"
    echo -e "\033[0;37m$(cat ${SSH_KEY_PATH}.pub)\033[0m"
    
    # –ö–æ–ø–∏—Ä—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –≤ –ø–∞–ø–∫—É join
    cp "${SSH_KEY_PATH}.pub" "$JOIN_DIR/ssh_public_key.pub"
    show_success "–ü—É–±–ª–∏—á–Ω—ã–π SSH –∫–ª—é—á —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ $JOIN_DIR/ssh_public_key.pub"
else
    show_progress "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SSH –∫–ª—é—á ED25519 –¥–ª—è ALT Team"
    echo "–°–æ–∑–¥–∞–µ–º SSH –∫–ª—é—á alt_team_ed25519 –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è–º–∏ ALT Linux"
    echo ""
    echo -e "\033[1;31m‚ö†Ô∏è  –í–ê–ñ–ù–û: SSH –∫–ª—é—á –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –ø–∞—Ä–æ–ª—å!\033[0m"
    echo -e "\033[0;33m–ü–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º ALT Linux Team –≤—Å–µ SSH –∫–ª—é—á–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞—â–∏—â–µ–Ω—ã –ø–∞—Ä–æ–ª–µ–º.\033[0m"
    echo ""
    echo -e "\033[1;33müìù –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –≤ –º–µ–Ω–µ–¥–∂–µ—Ä–µ –ø–∞—Ä–æ–ª–µ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, Bitwarden)!\033[0m"
    echo -e "\033[0;31m‚ùå –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å SSH –∫–ª—é—á–∞ –ù–ï–í–û–ó–ú–û–ñ–ù–û!\033[0m"
    echo ""
    
    # –°–æ–∑–¥–∞–µ–º SSH –∫–ª—é—á —Å –ø–∞—Ä–æ–ª–µ–º
    if ssh-keygen -t ed25519 -C "${USERNAME}@altlinux.org" -f "$SSH_KEY_PATH"; then
        echo ""
        echo -e "\033[1;33müîê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è\033[0m"
        echo "–î–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ –ø–∞—Ä–æ–ª—å SSH –∫–ª—é—á–∞."
        echo ""
        while true; do
            read -p "–í—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ –ø–∞—Ä–æ–ª—å SSH –∫–ª—é—á–∞ –≤ –Ω–∞–¥–µ–∂–Ω–æ–º –º–µ—Å—Ç–µ (–º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π)? (–¥–∞/–Ω–µ—Ç): " password_saved
            if [[ "$password_saved" =~ ^([–¥–î]|[yY]|[–¥–î][–∞–ê]|[yY][eE][sS])$ ]]; then
                show_success "SSH –∫–ª—é—á —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: $SSH_KEY_PATH"
                echo ""
                echo "–ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:"
                echo -e "\033[1;32m$(cat ${SSH_KEY_PATH}.pub)\033[0m"
                
                # –ö–æ–ø–∏—Ä—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –≤ –ø–∞–ø–∫—É join
                cp "${SSH_KEY_PATH}.pub" "$JOIN_DIR/ssh_public_key.pub"
                show_success "–ü—É–±–ª–∏—á–Ω—ã–π SSH –∫–ª—é—á —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ $JOIN_DIR/ssh_public_key.pub"
                break
            else
                echo ""
                show_warning "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å SSH –∫–ª—é—á–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ!"
                echo "–ë–µ–∑ –ø–∞—Ä–æ–ª—è –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –∫–ª—é—á."
                echo ""
            fi
        done
    else
        show_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å SSH –∫–ª—é—á"
    fi
fi

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è GPG –∫–ª—é—á–∞  
echo ""
echo -e "\033[1;35m--- GPG –∫–ª—é—á ---\033[0m"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ GPG –∫–ª—é—á–∏ —Å –Ω–∞—à–∏–º email
existing_gpg_keys=$(gpg --list-secret-keys --with-colons 2>/dev/null | grep -A5 "${USERNAME}@altlinux.org" | grep "^sec" | cut -d: -f5)

if [ -n "$existing_gpg_keys" ]; then
    show_success "GPG –∫–ª—é—á —Å email ${USERNAME}@altlinux.org —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    for key_id in $existing_gpg_keys; do
        echo "  –ö–ª—é—á: $key_id"
        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ —Ñ–∞–π–ª
        gpg --armor --export "${USERNAME}@altlinux.org" > "$JOIN_DIR/gpg_public_key.asc"
        show_success "–ü—É–±–ª–∏—á–Ω—ã–π GPG –∫–ª—é—á —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ $JOIN_DIR/gpg_public_key.asc"
        
        # –ü–æ–ª—É—á–∞–µ–º fingerprint –¥–ª—è RPM –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        gpg_fingerprint=$(LANG=C gpg --fingerprint "$key_id" | grep 'fingerprint =' | tr -d ' ' | cut -d= -f2)
        echo "$gpg_fingerprint" > "$BACKUP_DIR/gpg_fingerprint.txt"
        break
    done
else
    show_progress "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ GPG –∫–ª—é—á–∞ –¥–ª—è ${USERNAME}@altlinux.org"
    echo "–°–æ–∑–¥–∞–µ–º GPG –∫–ª—é—á —Å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ ALT Linux..."
    echo ""
    echo "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–ª—é—á–∞:"
    echo "  - –¢–∏–ø: RSA and RSA"
    echo "  - –†–∞–∑–º–µ—Ä: 4096 –±–∏—Ç"
    echo "  - –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π"
    echo "  - –ò–º—è: $FULLNAME"
    echo "  - Email: ${USERNAME}@altlinux.org"
    echo "  - –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: (–ø—É—Å—Ç–æ–π)"
    echo ""
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ GPG
    GPG_BATCH_FILE=$(mktemp)
    cat > "$GPG_BATCH_FILE" <<EOF
%echo Generating ALT Linux Team GPG key
Key-Type: RSA
Key-Length: 4096
Subkey-Type: RSA
Subkey-Length: 4096
Name-Real: $FULLNAME
Name-Email: ${USERNAME}@altlinux.org
Expire-Date: 0
%ask-passphrase
%commit
%echo done
EOF

    echo -e "\033[0;33m–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –∑–∞—â–∏—Ç—ã GPG –∫–ª—é—á–∞ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è):\033[0m"
    
    if gpg --batch --generate-key "$GPG_BATCH_FILE"; then
        rm -f "$GPG_BATCH_FILE"
        show_success "GPG –∫–ª—é—á —Å–æ–∑–¥–∞–Ω —Å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏"
        
        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á
        gpg --armor --export "${USERNAME}@altlinux.org" > "$JOIN_DIR/gpg_public_key.asc"
        show_success "–ü—É–±–ª–∏—á–Ω—ã–π GPG –∫–ª—é—á —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ $JOIN_DIR/gpg_public_key.asc"
        
        # –ü–æ–ª—É—á–∞–µ–º ID –∏ fingerprint
        new_key_id=$(gpg --list-secret-keys --with-colons 2>/dev/null | grep -A5 "${USERNAME}@altlinux.org" | grep "^sec" | cut -d: -f5 | head -1)
        gpg_fingerprint=$(LANG=C gpg --fingerprint "$new_key_id" | grep 'fingerprint =' | tr -d ' ' | cut -d= -f2)
        echo "$gpg_fingerprint" > "$BACKUP_DIR/gpg_fingerprint.txt"
        
        echo ""
        echo "GPG –∫–ª—é—á —Å–æ–∑–¥–∞–Ω:"
        echo "  ID: $new_key_id"
        echo "  Fingerprint: $gpg_fingerprint"
    else
        rm -f "$GPG_BATCH_FILE"
        show_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å GPG –∫–ª—é—á"
        # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
        echo "<CHANGE_ME FROM \"gpg -k\">" > "$BACKUP_DIR/gpg_fingerprint.txt"
    fi
fi

############
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è git
############
echo ""
echo -e "\033[1;36m=== –ù–ê–°–¢–†–û–ô–ö–ê GIT ===\033[0m"
CONFIG_PATH="$HOME/.config/git/config-alt-team"

if is_git_configured; then
    show_success "Git —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è ALT Team"
    echo -e "\033[0;33m[!] –í–ê–ñ–ù–û:\033[0m –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤ ALT: \033[1;32m$TEAM_DIR\033[0m"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–æ–π GPG –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω
    if [ -f "$CONFIG_PATH" ]; then
        current_key=$(grep "signingkey" "$CONFIG_PATH" 2>/dev/null | sed 's/.*signingkey = //' | tr -d ' ')
        if [ -n "$current_key" ] && [[ "$current_key" != *"<CHANGE_ME"* ]]; then
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–ª—é—á –≤ GPG
            if gpg --list-secret-keys "$current_key" >/dev/null 2>&1; then
                show_success "GPG –∫–ª—é—á –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ –∫–æ–º–º–∏—Ç–æ–≤: $current_key ‚úì"
            else
                show_warning "GPG –∫–ª—é—á $current_key –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ keyring"
            fi
        else
            show_warning "GPG –∫–ª—é—á –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ –∫–æ–º–º–∏—Ç–æ–≤ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            echo ""
            read -p "–•–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å GPG –∫–ª—é—á –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ –∫–æ–º–º–∏—Ç–æ–≤? (–¥–∞/–Ω–µ—Ç): " setup_gpg_response
            if [[ "$setup_gpg_response" =~ ^([–¥–î]|[yY]|[–¥–î][–∞–ê]|[yY][eE][sS])$ ]]; then
                # –í—ã–±–∏—Ä–∞–µ–º GPG –∫–ª—é—á
                selected_key=$(select_gpg_key)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
                if [[ "$selected_key" != *"<CHANGE_ME"* ]]; then
                    sed -i "s/signingkey = .*/signingkey = $selected_key/" "$CONFIG_PATH"
                    show_success "GPG –∫–ª—é—á $selected_key –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ git"
                else
                    show_warning "GPG –∫–ª—é—á –Ω–µ –≤—ã–±—Ä–∞–Ω, –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –∏–∑–º–µ–Ω–µ–Ω–∞"
                fi
            fi
        fi
    fi
    
    echo ""
    echo -e "\033[0;37m--- –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è git Alt-team ($CONFIG_PATH) ---\033[0m"
    cat "$CONFIG_PATH"
    echo -e "\033[0;37m--- –ö–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞ ---\033[0m"
else
    show_progress "–°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: $TEAM_DIR"
    mkdir -p "$TEAM_DIR"

    show_progress "–°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Git –¥–ª—è ALT Team"
    mkdir -p "$(dirname "$CONFIG_PATH")"

    # –ü–æ–ª—É—á–∞–µ–º GPG fingerprint –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    echo ""
    gpg_fingerprint=""
    if [ -f "$BACKUP_DIR/gpg_fingerprint.txt" ]; then
        gpg_fingerprint=$(cat "$BACKUP_DIR/gpg_fingerprint.txt")
    else
        # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∫–ª—é—á –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        existing_key=$(gpg --list-secret-keys --with-colons 2>/dev/null | grep -A5 "${USERNAME}@altlinux.org" | grep "^sec" | cut -d: -f5 | head -1)
        if [ -n "$existing_key" ]; then
            gpg_fingerprint=$(LANG=C gpg --fingerprint "$existing_key" | grep 'fingerprint =' | tr -d ' ' | cut -d= -f2)
        else
            gpg_fingerprint="<CHANGE_ME FROM \"gpg -k\">"
        fi
    fi
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é git
    cat > "$CONFIG_PATH" <<EOF
[user]
    name = $FULLNAME
    email = ${USERNAME}@altlinux.org
    signingkey = $gpg_fingerprint

[gpg]
    format = openpgp

[commit]
    gpgsign = true
EOF

    show_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Git —Å–æ–∑–¥–∞–Ω–∞: $CONFIG_PATH"
    
    # –ï—Å–ª–∏ –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
    if [[ "$gpg_fingerprint" == *"<CHANGE_ME"* ]]; then
        echo ""
        show_warning "GPG –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
        echo "–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–ø–∏—Å–∏ –∫–æ–º–º–∏—Ç–æ–≤:"
        echo "  1. –°–æ–∑–¥–∞–π—Ç–µ GPG –∫–ª—é—á (–µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç): gpg --gen-key"
        echo "  2. –ù–∞–π–¥–∏—Ç–µ fingerprint –∫–ª—é—á–∞: gpg --fingerprint"
        echo "  3. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª: $CONFIG_PATH"
        echo "  4. –ó–∞–º–µ–Ω–∏—Ç–µ —Å—Ç—Ä–æ–∫—É signingkey –Ω–∞ –≤–∞—à GPG fingerprint"
    else
        show_success "GPG fingerprint $gpg_fingerprint –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ –∫–æ–º–º–∏—Ç–æ–≤"
    fi

    GITCONFIG="$HOME/.gitconfig"
    INCLUDE_BLOCK="[includeIf \"gitdir:${TEAM_DIR}/\"]"

    show_progress "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —É—Å–ª–æ–≤–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    if ! grep -qF "$INCLUDE_BLOCK" "$GITCONFIG" 2>/dev/null; then
        echo "" >> "$GITCONFIG"
        echo "$INCLUDE_BLOCK" >> "$GITCONFIG"
        echo "    path = $CONFIG_PATH" >> "$GITCONFIG"
        show_success "–î–æ–±–∞–≤–ª–µ–Ω includeIf –¥–ª—è $TEAM_DIR –≤ ~/.gitconfig"
    else
        show_warning "includeIf –¥–ª—è $TEAM_DIR —É–∂–µ –µ—Å—Ç—å –≤ ~/.gitconfig"
    fi

    echo ""
    echo -e '\033[1;37m############\n# Git –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è\n############\033[0m'
    echo ""
    echo -e "\033[0;37m--- –û—Å–Ω–æ–≤–Ω–æ–π gitconfig (~/.gitconfig) ---\033[0m"
    cat ~/.gitconfig

    echo ""
    echo -e "\033[0;37m--- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è git Alt-team ($CONFIG_PATH) ---\033[0m"
    cat $CONFIG_PATH

    echo ""
    echo -e "\033[0;33m[!] –í–ê–ñ–ù–û:\033[0m –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤ ALT: \033[1;32m$TEAM_DIR\033[0m"
fi

############
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ ~/.ssh/config
############
echo ""
echo -e "\033[1;36m=== –ù–ê–°–¢–†–û–ô–ö–ê SSH ===\033[0m"

if is_ssh_configured; then
    show_success "SSH —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è ALT —Å–µ—Ä–≤–µ—Ä–æ–≤"
    echo ""
    echo -e "\033[0;37m--- –¢–µ–∫—É—â–∞—è SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (~/.ssh/config) ---\033[0m"
    cat ~/.ssh/config
    echo -e "\033[0;37m--- –ö–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞ ---\033[0m"
else
    show_progress "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è ALT —Å–µ—Ä–≤–µ—Ä–æ–≤"

    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é .ssh –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    mkdir -p ~/.ssh
    chmod 700 ~/.ssh

    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª config –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    touch ~/.ssh/config
    chmod 600 ~/.ssh/config

    if ! grep -q "gitery.altlinux.org" ~/.ssh/config; then
cat << EOF >> ~/.ssh/config

# ALT Linux Team - –∏—Å–ø–æ–ª—å–∑—É–µ–º alt_team_ed25519 –∫–ª—é—á
Host gitery
    HostName gitery.altlinux.org
    User alt_${USERNAME}
    Port 222
    IdentityFile ~/.ssh/alt_team_ed25519

# –°–±–æ—Ä–æ—á–Ω–∏—Ü–∞
Host gyle
    HostName gyle.altlinux.org
    User alt_${USERNAME}
    Port 222
    IdentityFile ~/.ssh/alt_team_ed25519
EOF
        show_success "SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞"
    else
        show_warning "SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è ALT —Å–µ—Ä–≤–µ—Ä–æ–≤ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi

    echo ""
    echo -e "\033[0;37m--- –¢–µ–∫—É—â–∞—è SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (~/.ssh/config) ---\033[0m"
    cat ~/.ssh/config
    echo -e "\033[0;37m--- –ö–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞ ---\033[0m"
fi

echo ""
echo -e "\033[1;36m=== –°–û–ó–î–ê–ù–ò–ï –ë–ï–ö–ê–ü–û–í –ò –ò–ù–°–¢–†–£–ö–¶–ò–ô ===\033[0m"

show_progress "–°–æ–∑–¥–∞–µ–º –±–µ–∫–∞–ø—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"

# –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ –±–µ–∫–∞–ø
files_to_backup=(
    "$HOME/.rpmmacros:rpmmacros"
    "$HOME/.hasher/config:hasher_config"
    "$HOME/.config/git/config-alt-team:git_config_alt_team"
    "$HOME/.gitconfig:gitconfig"
    "$HOME/.ssh/config:ssh_config"
)

for file_pair in "${files_to_backup[@]}"; do
    src_file="${file_pair%:*}"
    dst_name="${file_pair#*:}"
    
    if [ -f "$src_file" ]; then
        cp "$src_file" "$BACKUP_DIR/$dst_name"
        show_success "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ: $src_file ‚Üí $BACKUP_DIR/$dst_name"
    fi
done

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ backup
cat > "$BACKUP_DIR/user_info.txt" <<EOF
# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ ALT Linux
FULLNAME="$FULLNAME"
USERNAME="$USERNAME"
EMAIL="${USERNAME}@altlinux.org"
TEAM_DIR="$TEAM_DIR"
SETUP_DATE="$(date)"
EOF

# –°–æ–∑–¥–∞–µ–º README —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ team
cat > "$TEAM_DIR/README.md" <<'EOF'
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ä–µ–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ ALT Linux

–≠—Ç–æ—Ç –∫–∞—Ç–∞–ª–æ–≥ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–∞–π–ª—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ä–µ–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø–∞–∫–µ—Ç–æ–≤ ALT Linux.

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫

### `join/` - –§–∞–π–ª—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
- `ssh_public_key.pub` - –ü—É–±–ª–∏—á–Ω—ã–π SSH –∫–ª—é—á (–∑–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–∞ gitery.altlinux.org)
- `gpg_public_key.asc` - –ü—É–±–ª–∏—á–Ω—ã–π GPG –∫–ª—é—á –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–µ–π

### `backup/` - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
- `gpg_fingerprint.txt` - Fingerprint GPG –∫–ª—é—á–∞ –¥–ª—è RPM –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
- `user_info.txt` - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
- `restore.sh` - –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–≤–æ–π –º–∞—à–∏–Ω–µ
- –ë–µ–∫–∞–ø—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤

## –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤–æ–π –º–∞—à–∏–Ω–µ

1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç—É –ø–∞–ø–∫—É –Ω–∞ –Ω–æ–≤—É—é –º–∞—à–∏–Ω—É
2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:
   ```bash
   cd backup
   chmod +x restore.sh
   ./restore.sh
   ```
3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–ª—é—á–∏ SSH –∏ GPG –≤—Ä—É—á–Ω—É—é:
   - SSH: `~/.ssh/alt_team_ed25519` (–ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á)
   - GPG: —ç–∫—Å–ø–æ—Ä—Ç/–∏–º–ø–æ—Ä—Ç –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
4. –ü–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ –≤ —Å–µ—Å—Å–∏—é –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ hasher

## –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏

1. **–ó–∞–≥—Ä—É–∑–∏—Ç–µ SSH –∫–ª—é—á –Ω–∞ —Å–µ—Ä–≤–µ—Ä**:
   - –û—Ç–∫—Ä–æ–π—Ç–µ https://gitery.altlinux.org
   - –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É
   - –î–æ–±–∞–≤—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ `join/ssh_public_key.pub` –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSH –∫–ª—é—á–µ–π

2. **–û—Ç–ø—Ä–∞–≤—å—Ç–µ GPG –∫–ª—é—á –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä—É –∫–æ–º–∞–Ω–¥—ã**:
   - –§–∞–π–ª `gpg_public_key.asc` —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∞—à –ø—É–±–ª–∏—á–Ω—ã–π GPG –∫–ª—é—á
   - –û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ keyring –∫–æ–º–∞–Ω–¥—ã

3. **–ù–∞—á–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É —Å –ø–∞–∫–µ—Ç–∞–º–∏**:
   - –í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã —Ä–∞–∑–º–µ—â–∞–π—Ç–µ –≤ `~/alt-team/`
   - –ö–ª–æ–Ω–∏—Ä—É–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏: `git clone git://git.altlinux.org/gears/<package>.git`

## –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã

### –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–∞–∫–µ—Ç–∞–º–∏
```bash
# –°–∫–∞—á–∞—Ç—å –ø–∞–∫–µ—Ç –∏–∑ –°–∏–∑–∏—Ñ–∞
rpmgp -g package_name

# –°–æ–±—Ä–∞—Ç—å –ø–∞–∫–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ
rpmbb

# –°–æ–±—Ä–∞—Ç—å –ø–∞–∫–µ—Ç –≤ hasher
rpmbsh

# –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∞–∫–µ—Ç –≤ –°–∏–∑–∏—Ñ
rpmbs -u
```

### –†–∞–±–æ—Ç–∞ —Å Git
```bash
# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–∞–∫–µ—Ç
git clone git://git.altlinux.org/gears/p/package_name.git

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å—å –∫–æ–º–º–∏—Ç–æ–≤
git log --show-signature
```

### –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
```bash
# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å GPG –∫–ª—é—á–∏
gpg --list-secret-keys

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
ssh -T git@gitery.altlinux.org

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å hasher
hsh --version
```

## –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏

- [–°–±–æ—Ä–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ start](https://www.altlinux.org/–°–±–æ—Ä–∫–∞_–ø–∞–∫–µ—Ç–æ–≤_start) - –ö–æ—Ä–æ—Ç–∫–∏–π –∏ –±—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
- [ALT Packaging Guide](https://alt-packaging-guide.github.io) - –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –æ —Å–±–æ—Ä–∫–µ –ø–∞–∫–µ—Ç–æ–≤
- [Etersoft-build-utils howto](https://www.altlinux.org/Etersoft-build-utils_howto) - –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –≠—Ç–µ—Ä—Å–æ—Ñ—Ç —É—Ç–∏–ª–∏—Ç

EOF

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –≤ backup
cat > "$BACKUP_DIR/restore.sh" <<'EOF'
#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ALT Linux –Ω–∞ –Ω–æ–≤–æ–π –º–∞—à–∏–Ω–µ

set -e

echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å—Ä–µ–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ ALT Linux"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "user_info.txt" ]; then
    echo "‚ùå –§–∞–π–ª user_info.txt –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –ø–∞–ø–∫–∏ —Å –±–µ–∫–∞–ø–∞–º–∏."
    exit 1
fi

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
source user_info.txt

echo "üë§ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è: $FULLNAME ($EMAIL)"

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p ~/.config/git
mkdir -p ~/.hasher
mkdir -p ~/.ssh
mkdir -p "$TEAM_DIR"

echo "üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"

# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if [ -d "backup" ]; then
    echo "üìã –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."
    
    [ -f "backup/rpmmacros" ] && cp backup/rpmmacros ~/.rpmmacros && echo "  ‚úì ~/.rpmmacros"
    [ -f "backup/hasher_config" ] && cp backup/hasher_config ~/.hasher/config && echo "  ‚úì ~/.hasher/config"
    [ -f "backup/git_config_alt_team" ] && cp backup/git_config_alt_team ~/.config/git/config-alt-team && echo "  ‚úì ~/.config/git/config-alt-team"
    [ -f "backup/ssh_config" ] && cp backup/ssh_config ~/.ssh/config && echo "  ‚úì ~/.ssh/config"
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º gitconfig —Å includeIf
    if [ -f "backup/gitconfig" ]; then
        if ! grep -q "includeIf.*$TEAM_DIR" ~/.gitconfig 2>/dev/null; then
            echo "" >> ~/.gitconfig
            echo "[includeIf \"gitdir:$TEAM_DIR/\"]" >> ~/.gitconfig
            echo "    path = ~/.config/git/config-alt-team" >> ~/.gitconfig
            echo "  ‚úì ~/.gitconfig (–¥–æ–±–∞–≤–ª–µ–Ω includeIf)"
        else
            echo "  ‚úì ~/.gitconfig (includeIf —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)"
        fi
    fi
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
chmod 600 ~/.ssh/config 2>/dev/null || true
chmod 700 ~/.ssh 2>/dev/null || true
chmod 700 ~/.hasher 2>/dev/null || true

echo "üîê –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

echo ""
echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!"
echo ""
echo "üîë –í–ê–ñ–ù–´–ï –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:"
echo "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π SSH –∫–ª—é—á –≤ ~/.ssh/alt_team_ed25519"
echo "2. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π GPG –∫–ª—é—á: gpg --import private_key.asc"
echo "3. –í—ã–π–¥–∏—Ç–µ –∏ –∑–∞–π–¥–∏—Ç–µ –≤ —Å–µ—Å—Å–∏—é –∑–∞–Ω–æ–≤–æ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ hasher"
echo ""
echo "üìÅ –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤ ALT: $TEAM_DIR"
EOF

chmod +x "$BACKUP_DIR/restore.sh"

show_success "–°–æ–∑–¥–∞–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫ –≤ $TEAM_DIR:"
echo "  üìÅ join/ - —Ñ–∞–π–ª—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (–ø—É–±–ª–∏—á–Ω—ã–µ –∫–ª—é—á–∏)"
echo "  üìÅ backup/ - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ —Å–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"
echo "  üìÑ README.md - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"

echo ""
echo -e "\033[1;36m=== –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ===\033[0m"
echo ""

echo -e "\e[96mTL;DR –ø–æ–ª–µ–∑–Ω—ã—Ö –∫–æ–º–∞–Ω–¥\e[39m

\e[93m## –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–∞–∫–µ—Ç ##\e[39m

- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–∞–∫–µ—Ç–∞ –≤ –°–∏–∑–∏—Ñ–µ
    \e[92mrpmgp -c –Ω–∞–∑–≤–∞–Ω–∏–µ_–ø–∞–∫–µ—Ç–∞\e[39m

- –ó–∞–≥—Ä—É–∑–∫–∞ —É–∂–µ —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ –≤ –°–∏–∑–∏—Ñ –ø–∞–∫–µ—Ç–∞
    \e[92mrpmgp -g neofetch\e[39m

\e[93m## –°–±–æ—Ä–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ ##\e[39m

- –°–æ–±—Ä–∞—Ç—å –ø–∞–∫–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ
    \e[92mrpmbb\e[39m

- –û—Ç–ª–∞–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —à–∞–≥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–∞–π–ª–æ–≤
    \e[92mrpmbb -i\e[39m

- –û—Ç–ª–∞–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —à–∞–≥ —É–ø–∞–∫–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–∞
    \e[92mrpmbb -p\e[39m

\e[93m## –°–±–æ—Ä–∫–∞ –≤ Hasher ##\e[39m

- –°–æ–±—Ä–∞—Ç—å –ø–∞–∫–µ—Ç –≤ hasher
    \e[92mrpmbsh\e[39m

- –°–æ–±—Ä–∞—Ç—å –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å '-i' –≤–Ω—É—Ç—Ä–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å '-u' –≤ –°–∏–∑–∏—Ñ
    \e[92mrpmbsh -i\e[39m

\e[93m## –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∞–∫–µ—Ç–∞ ##\e[39m

- –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∞–∫–µ—Ç –Ω–∞ —Å–±–æ—Ä–∫—É –≤ –°–∏–∑–∏—Ñ
    \e[92mrpmbs -u\e[39m

\e[93m## –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–∞ ##\e[39m

- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤, –µ—Å–ª–∏ –≤ Source —É–∫–∞–∑–∞–Ω URL –∫ —Ñ–∞–π–ª—É —Å –∏—Å—Ö–æ–¥–Ω–∏–∫–∞–º–∏:
        - # Source-url: http://example.com/%name/%name-%version.zip
        - # Source-git: http://github.com/user/repo.git

    \e[92mrpmgs [-f] %–Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è, –∫–∞–∫ –≤ —Ç–µ–≥–∞—Ö%\e[39m

- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, —Å–∫–∞—á–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, —Å–æ–±–µ—Ä—ë—Ç, –∑–∞–ø—É—Å—Ç–∏—Ç —Ç–µ—Å—Ç –∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤ –°–∏–∑–∏—Ñ
    \e[92mrpmrb –Ω–æ–≤–∞—è_–≤–µ—Ä—Å–∏—è\e[39m

–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: 
- \e[94mhttps://www.altlinux.org/–°–±–æ—Ä–∫–∞_–ø–∞–∫–µ—Ç–æ–≤_(etersoft-build-utils)\e[39m -  –ö–æ—Ä–æ—Ç–∫–∏–π –∏ –±—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
- \e[94mhttps://alt-packaging-guide.github.io\e[39m - –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –æ —Å–±–æ—Ä–∫–µ –ø–∞–∫–µ—Ç–æ–≤
- \e[94mhttps://www.altlinux.org/Etersoft-build-utils_howto\e[39m - –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –≠—Ç–µ—Ä—Å–æ—Ñ—Ç —É—Ç–∏–ª–∏—Ç

\e[32m‚úì –°—Ä–µ–¥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!\e[39m

\e[91müîë –í–ê–ñ–ù–´–ï –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:\e[39m
1. \e[93m–í—ã–π–¥–∏—Ç–µ –∏ –∑–∞–π–¥–∏—Ç–µ –≤ —Å–µ—Å—Å–∏—é –∑–∞–Ω–æ–≤–æ\e[39m –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ hasher
2. \e[93m–ó–∞–≥—Ä—É–∑–∏—Ç–µ SSH –∫–ª—é—á –Ω–∞ gitery.altlinux.org\e[39m:
   - –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á: \e[1;32m$JOIN_DIR/ssh_public_key.pub\e[39m
3. \e[93m–û—Ç–ø—Ä–∞–≤—å—Ç–µ GPG –∫–ª—é—á –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä—É –∫–æ–º–∞–Ω–¥—ã\e[39m:
   - –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á: \e[1;32m$JOIN_DIR/gpg_public_key.asc\e[39m

\e[96müì¶ –í–ê–ñ–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê –î–õ–Ø –°–û–•–†–ê–ù–ï–ù–ò–Ø:\e[39m
\e[1;33m$TEAM_DIR\e[39m
‚îú‚îÄ‚îÄ join/ - —Ñ–∞–π–ª—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (–ø—É–±–ª–∏—á–Ω—ã–µ –∫–ª—é—á–∏)
‚îú‚îÄ‚îÄ backup/ - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ —Å–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
‚îî‚îÄ‚îÄ README.md - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç—É –ø–∞–ø–∫—É –≤ –Ω–∞–¥–µ–∂–Ω–æ–µ –º–µ—Å—Ç–æ!

\e[36m–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã ALT —Ä–∞–∑–º–µ—â–∞–π—Ç–µ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:\e[39m \e[1;32m$TEAM_DIR\e[39m"

echo ""
show_success "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É ALT Linux!"
